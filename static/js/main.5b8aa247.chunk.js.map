{"version":3,"sources":["App.js","theme.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","target","href","Date","toUTCString","BarChart","id","data","width","height","useEffect","console","log","root","d3","size","padding","eachBefore","d","parent","name","sum","value","sort","a","b","treemap","z","myColor","svg","allNodeCategory","leaves","map","n","category","categories","store","Set","forEach","x","has","push","add","categoryColors","c","ordinal","domain","range","append","attr","legendOrdinal","legendColor","shape","type","shapePadding","scale","select","call","selectAll","tip","d3Tip","offset","html","cell","enter","x0","y0","y1","x1","on","e","str","show","this","currentTarget","style","hide","split","concat","i","text","position","display","alignItems","justifyContent","App","useState","dataset","setDataset","title","setTitle","url","setUrl","fetch","then","response","json","Grid","container","justify","backgroundImage","item","Box","boxShadow","p","backgroundColor","borderRadius","component","gutterBottom","length","m","ButtonGroup","aria-label","Button","onClick","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.5b8aa247.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport * as d3 from 'd3';\nimport d3Tip from \"d3-tip\";\nimport { useEffect, useState,useRef } from 'react';\nimport { Grid } from '@material-ui/core';\nimport {legendColor} from 'd3-svg-legend';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link  target=\"_blank\" href=\"https://saharsh-r.github.io/\">\n        Saharsh Rathi\n      </Link>{' at '}\n      {new Date().toUTCString()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nfunction BarChart({ id, data, width = 1200, height = 570 }) {\n  var distance = 130\n  var treemap = data => d3.treemap()\n    .size([width - distance, height])\n    .padding(1)\n  (d3.hierarchy(data)\n      .eachBefore(function (d) {\n        // dfs manner. from (top 100) -> (Xbox) -> (all the games of xbox)\n        //not required though to pass the tests of fcc but still nice to know\n        // only the top 'top 100 games' does not have a parent.\n        d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.name;\n      })\n      .sum(d => {\n        // uncomment the following line to see how the sum is taking place. From leaf to root. 2600 game, 2600, wii games, wii ...\n        // console.log(d.value) ; \n        return d.value\n      })\n      .sort((a, b) => b.value - a.value));\n\n  // another way of implementing this is given in this link https://codepen.io/freeCodeCamp/pen/KaNGNR?editors=1010 It declares the root and something different.\n\n  // uncomment the following lines to see all the height 0 and depth 2 nodes of all the games. \n  // console.log(root.leaves()) \n      \n  useEffect(() => {\n    console.log('updating')\n  const root = treemap(data) ;\n\n    const z = d3.schemePaired\n    var myColor = d3.scaleOrdinal(z)\n\n    const svg = d3\n      .select('#tree-map-diagram')\n     \n\n    // legend stuff\n\n    // const categories = data.children.map(c => c.name) // not sorted according to area\n\n    const allNodeCategory = root.leaves().map(n => n.data.category)\n    const categories = []\n    const store = new Set()\n    allNodeCategory.forEach(x => {if (!store.has(x)){categories.push(x); store.add(x)}})\n\n    const categoryColors = categories.map(c => myColor(c))\n\n    var ordinal = d3.scaleOrdinal()\n      .domain(categories)\n      .range(categoryColors);\n    \n    \n    svg.append(\"g\")\n      .attr('id', 'legend')\n      .attr(\"class\", \"legendOrdinal\")\n      .attr(\"transform\", `translate(${width - distance + 20},20)`);\n    \n    var legendOrdinal = legendColor()\n      //d3 symbol creates a path-string, for example\n      //\"M0,-8.059274488676564L9.306048591020996,\n      //8.059274488676564 -9.306048591020996,8.059274488676564Z\"\n      .shape(\"rect\", d3.symbol().type(d3.symbolSquare).size(150)())\n      .shapePadding(10)\n      //use cellFilter to hide the \"e\" cell\n      .scale(ordinal);\n    \n    svg.select(\".legendOrdinal\")\n      .call(legendOrdinal)\n      .selectAll('rect')\n      .attr('class', 'legend-item')\n      ;\n    // legend stuff end\n\n    // tooltip\n    var tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .attr('id', 'tooltip')\n      .offset([-10, 0])\n      .html(function(d) {\n        return d;\n      });\n    var cell = svg\n      .selectAll('whythisnotg') //if this is 'g' it does not work. IDK why.\n      .data(root.leaves())\n      .enter()\n      .append('g')\n      .attr('class', 'group')\n      .attr(\"transform\", d => `translate(${d.x0},${d.y0})`);\n\n    cell\n      .append('rect')\n      .attr('id', d => {\n        // here d is a Node. The data of json is present in d.data. Uncomment this to understand\n        //console.log(d)\n        return d.data.id // the big thing we did before which was not necessary.\n      })\n      .attr('class', 'tile')\n      .attr('height', d => d.y1 - d.y0)\n      .attr('width', d => d.x1 - d.x0)\n      .attr('data-name', d => d.data.name)\n      .attr('data-category', d => d.data.category)\n      .attr('data-value', d => d.value) // d.data.value also works, but it is already present in the node form itself\n      .attr('fill', d =>  myColor(d.data.category))\n      .on('mouseover', function(e, d) {\n        // has to be in this way. (e, d) => {} will not work.\n          tip.attr('data-value', d.value);\n          var str = \n          `<span style='color:#FE621D'>Name: </span>${d.data.name}</br>` + \n          `<span style='color:#FE621D'>Category: </span>${d.data.category}</br>` +\n          `<span style='color:#FE621D'>Value: </span>${d.value}` \n          ;\n          tip.show(str, this); \n          d3.select(e.currentTarget).style(\"fill\", 'white');\n        })\n      .on('mouseout', function(e, d) {\n          d3.select(e.currentTarget).style(\"fill\",  myColor(d.data.category));\n         tip.hide(this); \n        });\n    \n    cell.append(\"text\")\n      .selectAll(\"fgsdfg\")\n      .attr('class', 'tile-text')\n      .data(d => d.data.name.split(/(?=[A-Z][^A-Z])/g).concat((d.value)))\n      .enter()\n      .append(\"tspan\")\n      .attr(\"x\", 2)\n      .attr(\"y\", (d, i) =>{\n        // console.log(d, i, 13 + i * 10); \n        // output in this way\n        /*\nSuper  1 23\nMario  2 33\nBros.  3 43\nWii 4 53\n28.32 5 63\n        */  \n        return 8 + i * 8\n      })\n      // .attr(\"fill-opacity\", (d, i, nodes) => i === nodes.length - 1 ? 0.7 : null)\n      .text(d => d)\n      .attr('class', 'tile-text');\n    \n    svg.call(tip);\n  \n  }, []);\n  \n\n  return <div id={id} style={{position: 'relative', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n    <svg id={'tree-map-diagram'} width={width} height={height}> </svg>\n  </div>;\n}\n\nexport default function App() {\n  \n  const [dataset, setDataset] = useState([])\n  const [title, setTitle] = useState('Video Game Sales')\n  const [url, setUrl] = useState('')\n  \n  useEffect(() => {\n    if (url == ''){\n      fetch(\"https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/video-game-sales-data.json\")\n        .then(response => response.json())\n        .then(data => {\n          setDataset(data);\n          })\n    } else{\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setDataset(data);\n          })\n        console.log('updated')\n    }\n  }, [ url])\n  const treeDiagram = BarChart({data: dataset})\n  return (\n    <Grid container alignItems = 'center' justify = 'center'  style = {{backgroundImage: 'radial-gradient( grey, #414141, #000000)'}}>\n      <Grid item >\n        <Box  boxShadow={24} p={2} style={{backgroundColor: 'white'}} borderRadius={40}>\n          <Typography variant=\"h4\" component=\"h1\" align = 'center' id='title' gutterBottom>\n            {title}\n          </Typography>\n          <Typography variant=\"body1\" component=\"h2\" id='description' align = 'center' gutterBottom>\n            Here is the Treemap about the {title} grouped by their respective categories.\n          </Typography>\n          {dataset.length != 0 && \n            <BarChart id=\"barchart\" data={dataset} />\n          }\n          <Box m={1}>\n          <Grid container justify = \"center\">\n            <ButtonGroup size=\"large\" variant=\"contained\" aria-label=\"contained primary button group\">\n              <Button onClick={() => {setTitle('Kickstarter Pledges'); setUrl('https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/kickstarter-funding-data.json')}}>Kickstarter Pledges</Button>\n              <Button onClick={() => {setTitle('Movie Sales'); setUrl('https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/movie-data.json')}}>Movie Sales</Button>\n              <Button onClick={() => {setTitle('Video Game Sales'); setUrl('https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/video-game-sales-data.json')}}>Video Game Sales</Button>\n            </ButtonGroup>\n\n          </Grid>\n          \n          </Box>\n         \n          <Copyright />\n        </Box>\n      </Grid>\n    </Grid>\n    \n  );\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}